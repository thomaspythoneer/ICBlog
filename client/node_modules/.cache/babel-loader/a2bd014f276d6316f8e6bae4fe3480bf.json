{"ast":null,"code":"var _jsxFileName = \"/home/thomvs/MERN_BLOG/client/src/components/details/comments/Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport { Box, TextareaAutosize, Button, styled } from '@mui/material';\nimport { DataContext } from '../../../context/DataProvider';\nimport { API } from '../../../service/api';\n\n//components\nimport Comment from './Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled(Box)`\n    margin-top: 100px;\n    display: flex;\n`;\n_c = Container;\nconst Image = styled('img')({\n  width: 50,\n  height: 50,\n  borderRadius: '50%'\n});\nconst StyledTextArea = styled(TextareaAutosize)`\n    height: 100px !important;\n    width: 100%; \n    margin: 0 20px;\n`;\n_c2 = StyledTextArea;\nconst initialValue = {\n  name: '',\n  postId: '',\n  date: new Date(),\n  comments: ''\n};\nconst Comments = ({\n  post\n}) => {\n  _s();\n  const url = 'https://static.thenounproject.com/png/12017-200.png';\n  const [comment, setComment] = useState(initialValue);\n  const [comments, setComments] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const {\n    account\n  } = useContext(DataContext);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await API.getAllComments(post._id);\n      if (response.isSuccess) {\n        setComments(response.data);\n      }\n    };\n    getData();\n  }, [toggle, post]);\n  const handleChange = e => {\n    setComment({\n      ...comment,\n      name: account.username,\n      postId: post._id,\n      comments: e.target.value\n    });\n  };\n  const addComment = async () => {\n    await API.newComment(comment);\n    setComment(initialValue);\n    setToggle(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: url,\n        alt: \"dp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledTextArea, {\n        rowsMin: 5,\n        placeholder: \"what's on your mind?\",\n        onChange: e => handleChange(e),\n        value: comment.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"medium\",\n        style: {\n          height: 40\n        },\n        onClick: e => addComment(e),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: comments && comments.length > 0 && comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"QVlFBytq4fFxKmt1gnfc5HoXwmU=\");\n_c3 = Comments;\nexport default Comments;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"StyledTextArea\");\n$RefreshReg$(_c3, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useContext","Box","TextareaAutosize","Button","styled","DataContext","API","Comment","jsxDEV","_jsxDEV","Container","_c","Image","width","height","borderRadius","StyledTextArea","_c2","initialValue","name","postId","date","Date","comments","Comments","post","_s","url","comment","setComment","setComments","toggle","setToggle","account","getData","response","getAllComments","_id","isSuccess","data","handleChange","e","username","target","value","addComment","newComment","prev","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","rowsMin","placeholder","onChange","variant","color","size","style","onClick","length","map","_c3","$RefreshReg$"],"sources":["/home/thomvs/MERN_BLOG/client/src/components/details/comments/Comments.jsx"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { Box, TextareaAutosize, Button, styled } from '@mui/material';\n\nimport { DataContext } from '../../../context/DataProvider';\n\nimport { API } from '../../../service/api';\n\n//components\nimport Comment from './Comment';\n\nconst Container = styled(Box)`\n    margin-top: 100px;\n    display: flex;\n`;\n\nconst Image = styled('img')({\n    width: 50,\n    height: 50,\n    borderRadius: '50%'\n});\n\nconst StyledTextArea = styled(TextareaAutosize)`\n    height: 100px !important;\n    width: 100%; \n    margin: 0 20px;\n`;\n\nconst initialValue = {\n    name: '',\n    postId: '',\n    date: new Date(),\n    comments: ''\n}\n\nconst Comments = ({ post }) => {\n    const url = 'https://static.thenounproject.com/png/12017-200.png'\n\n    const [comment, setComment] = useState(initialValue);\n    const [comments, setComments] = useState([]);\n    const [toggle, setToggle] = useState(false);\n\n    const { account } = useContext(DataContext);\n\n    useEffect(() => {\n        const getData = async () => {\n            const response = await API.getAllComments(post._id);\n            if (response.isSuccess) {\n                setComments(response.data);\n            }\n        }\n        getData();\n    }, [toggle, post]);\n\n    const handleChange = (e) => {\n        setComment({\n            ...comment,\n            name: account.username,\n            postId: post._id,\n            comments: e.target.value\n        });\n    }\n\n    const addComment = async() => {\n        await API.newComment(comment);\n        setComment(initialValue)\n        setToggle(prev => !prev);\n    }\n    \n    return (\n        <Box>\n            <Container>\n                <Image src={url} alt=\"dp\" />   \n                <StyledTextArea \n                    rowsMin={5} \n                    placeholder=\"what's on your mind?\"\n                    onChange={(e) => handleChange(e)} \n                    value={comment.comments}\n                />\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    size=\"medium\" \n                    style={{ height: 40 }}\n                    onClick={(e) => addComment(e)}\n                >Post</Button>             \n            </Container>\n            <Box>\n                {\n                    comments && comments.length > 0 && comments.map(comment => (\n                        <Comment comment={comment} setToggle={setToggle} />\n                    ))\n                }\n            </Box>\n        </Box>\n    )\n}\n\nexport default Comments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}