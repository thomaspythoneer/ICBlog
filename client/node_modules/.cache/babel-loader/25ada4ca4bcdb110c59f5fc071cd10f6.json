{"ast":null,"code":"var _jsxFileName = \"/home/thomvs/MERN_BLOG/client/src/components/create/Update.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, styled, TextareaAutosize, Button, FormControl, InputBase } from '@mui/material';\nimport { AddCircle as Add } from '@mui/icons-material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { API } from '../../service/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled(Box)(({\n  theme\n}) => ({\n  margin: '50px 100px',\n  [theme.breakpoints.down('md')]: {\n    margin: 0\n  }\n}));\nconst Image = styled('img')({\n  width: '100%',\n  height: '50vh',\n  objectFit: 'cover'\n});\nconst StyledFormControl = styled(FormControl)`\n    margin-top: 10px;\n    display: flex;\n    flex-direction: row;\n`;\n_c = StyledFormControl;\nconst InputTextField = styled(InputBase)`\n    flex: 1;\n    margin: 0 30px;\n    font-size: 25px;\n`;\n_c2 = InputTextField;\nconst StyledTextArea = styled(TextareaAutosize)`\n    width: 100%;\n    border: none;\n    margin-top: 50px;\n    font-size: 18px;\n    &:focus-visible {\n        outline: none;\n    }\n`;\n_c3 = StyledTextArea;\nconst initialPost = {\n  title: '',\n  description: '',\n  picture: '',\n  username: 'codeforinterview',\n  categories: 'Tech',\n  createdDate: new Date()\n};\nconst Update = () => {\n  _s();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(initialPost);\n  const [file, setFile] = useState('');\n  const [imageURL, setImageURL] = useState('');\n  const {\n    id\n  } = useParams();\n  const url = 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\n  useEffect(() => {\n    const fetchData = async () => {\n      let response = await API.getPostById(id);\n      if (response.isSuccess) {\n        setPost(response.data);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const getImage = async () => {\n      if (file) {\n        const data = new FormData();\n        data.append(\"name\", file.name);\n        data.append(\"file\", file);\n        const response = await API.uploadFile(data);\n        if (response.isSuccess) {\n          post.picture = response.data;\n          setImageURL(response.data);\n        }\n      }\n    };\n    getImage();\n  }, [file]);\n  const updateBlogPost = async () => {\n    await API.updatePost(post);\n    navigate(`/details/${id}`);\n  };\n  const handleChange = e => {\n    setPost({\n      ...post,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      src: post.picture || url,\n      alt: \"post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledFormControl, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: /*#__PURE__*/_jsxDEV(Add, {\n          fontSize: \"large\",\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        style: {\n          display: \"none\"\n        },\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputTextField, {\n        onChange: e => handleChange(e),\n        value: post.title,\n        name: \"title\",\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updateBlogPost(),\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledTextArea, {\n      rowsMin: 5,\n      placeholder: \"Tell your story...\",\n      name: \"description\",\n      onChange: e => handleChange(e),\n      value: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(Update, \"r3GX+SNIK2NEEopGYuKsYZbNnDU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c4 = Update;\nexport default Update;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledFormControl\");\n$RefreshReg$(_c2, \"InputTextField\");\n$RefreshReg$(_c3, \"StyledTextArea\");\n$RefreshReg$(_c4, \"Update\");","map":{"version":3,"names":["React","useState","useEffect","Box","styled","TextareaAutosize","Button","FormControl","InputBase","AddCircle","Add","useNavigate","useParams","API","jsxDEV","_jsxDEV","Container","theme","margin","breakpoints","down","Image","width","height","objectFit","StyledFormControl","_c","InputTextField","_c2","StyledTextArea","_c3","initialPost","title","description","picture","username","categories","createdDate","Date","Update","_s","navigate","post","setPost","file","setFile","imageURL","setImageURL","id","url","fetchData","response","getPostById","isSuccess","data","getImage","FormData","append","name","uploadFile","updateBlogPost","updatePost","handleChange","e","target","value","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","fontSize","color","type","style","display","onChange","files","placeholder","onClick","variant","rowsMin","_c4","$RefreshReg$"],"sources":["/home/thomvs/MERN_BLOG/client/src/components/create/Update.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Box, styled, TextareaAutosize, Button, FormControl, InputBase } from '@mui/material';\nimport { AddCircle as Add } from '@mui/icons-material';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { API } from '../../service/api';\n\nconst Container = styled(Box)(({ theme }) => ({\n    margin: '50px 100px',\n    [theme.breakpoints.down('md')]: {\n        margin: 0\n    }\n}));\n\nconst Image = styled('img')({\n    width: '100%',\n    height: '50vh',\n    objectFit: 'cover'\n});\n\nconst StyledFormControl = styled(FormControl)`\n    margin-top: 10px;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst InputTextField = styled(InputBase)`\n    flex: 1;\n    margin: 0 30px;\n    font-size: 25px;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n    width: 100%;\n    border: none;\n    margin-top: 50px;\n    font-size: 18px;\n    &:focus-visible {\n        outline: none;\n    }\n`;\n\nconst initialPost = {\n    title: '',\n    description: '',\n    picture: '',\n    username: 'codeforinterview',\n    categories: 'Tech',\n    createdDate: new Date()\n}\n\nconst Update = () => {\n    const navigate = useNavigate();\n\n    const [post, setPost] = useState(initialPost);\n    const [file, setFile] = useState('');\n    const [imageURL, setImageURL] = useState('');\n\n    const { id } = useParams();\n\n    const url = 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            let response = await API.getPostById(id);\n            if (response.isSuccess) {\n                setPost(response.data);\n            }\n        }\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        const getImage = async () => { \n            if(file) {\n                const data = new FormData();\n                data.append(\"name\", file.name);\n                data.append(\"file\", file);\n                \n                const response = await API.uploadFile(data);\n                if (response.isSuccess) {\n                    post.picture = response.data;\n                    setImageURL(response.data);    \n                }\n            }\n        }\n        getImage();\n    }, [file])\n\n    const updateBlogPost = async () => {\n        await API.updatePost(post);\n        navigate(`/details/${id}`);\n    }\n\n    const handleChange = (e) => {\n        setPost({ ...post, [e.target.name]: e.target.value });\n    }\n\n    return (\n        <Container>\n            <Image src={post.picture || url} alt=\"post\" />\n\n            <StyledFormControl>\n                <label htmlFor=\"fileInput\">\n                    <Add fontSize=\"large\" color=\"action\" />\n                </label>\n                <input\n                    type=\"file\"\n                    id=\"fileInput\"\n                    style={{ display: \"none\" }}\n                    onChange={(e) => setFile(e.target.files[0])}\n                />\n                <InputTextField onChange={(e) => handleChange(e)} value={post.title} name='title' placeholder=\"Title\" />\n                <Button onClick={() => updateBlogPost()} variant=\"contained\" color=\"primary\">Update</Button>\n            </StyledFormControl>\n\n            <StyledTextArea\n                rowsMin={5}\n                placeholder=\"Tell your story...\"\n                name='description'\n                onChange={(e) => handleChange(e)} \n                value={post.description}\n            />\n        </Container>\n    )\n}\n\nexport default Update;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}